// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParliamentVotes.Data;

namespace ParliamentVotes.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210226233013_Fluent")]
    partial class Fluent
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BillMember", b =>
                {
                    b.Property<int>("BillsId")
                        .HasColumnType("int");

                    b.Property<int>("MembersId")
                        .HasColumnType("int");

                    b.HasKey("BillsId", "MembersId");

                    b.HasIndex("MembersId");

                    b.ToTable("BillMember");
                });

            modelBuilder.Entity("BillParliament", b =>
                {
                    b.Property<int>("BillsId")
                        .HasColumnType("int");

                    b.Property<int>("ParliamentsNumber")
                        .HasColumnType("int");

                    b.HasKey("BillsId", "ParliamentsNumber");

                    b.HasIndex("ParliamentsNumber");

                    b.ToTable("BillParliament");
                });

            modelBuilder.Entity("MemberPartyVote", b =>
                {
                    b.Property<int>("SplitPartyVotesId")
                        .HasColumnType("int");

                    b.Property<int>("SplitPartyVotesId1")
                        .HasColumnType("int");

                    b.HasKey("SplitPartyVotesId", "SplitPartyVotesId1");

                    b.HasIndex("SplitPartyVotesId1");

                    b.ToTable("MemberPartyVote");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Legislation.Act", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActType")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Acts");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Legislation.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectoryUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Legislation.SupplementaryOrderPaper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AmendingBill_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DirectoryUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Member_Id")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Parliament_Number")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AmendingBill_Id");

                    b.HasIndex("Member_Id");

                    b.HasIndex("Parliament_Number");

                    b.ToTable("SupplementaryOrderPapers");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Motions.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Bill_Id")
                        .HasColumnType("int");

                    b.Property<string>("Clause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Member_Id")
                        .HasColumnType("int");

                    b.Property<int>("Parliament_Number")
                        .HasColumnType("int");

                    b.Property<bool?>("PersonalVoteConservativeViewPoint")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionType")
                        .HasColumnType("int");

                    b.Property<int?>("Stage")
                        .HasColumnType("int");

                    b.Property<string>("Subtitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplementaryOrderPaper_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Bill_Id");

                    b.HasIndex("Member_Id");

                    b.HasIndex("Parliament_Number");

                    b.HasIndex("SupplementaryOrderPaper_Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Organisational.GoverningParty", b =>
                {
                    b.Property<int>("Parliament_Number")
                        .HasColumnType("int");

                    b.Property<int>("Party_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Relationship")
                        .HasColumnType("int");

                    b.HasKey("Parliament_Number", "Party_Id");

                    b.HasIndex("Party_Id");

                    b.ToTable("GoverningParties");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Organisational.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlsoKnownAs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageCopyright")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Organisational.Parliament", b =>
                {
                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Number");

                    b.ToTable("Parliaments");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Organisational.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlsoKnownAs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Organisational.Seating", b =>
                {
                    b.Property<int>("Parliament_Number")
                        .HasColumnType("int");

                    b.Property<int>("SeatIndex")
                        .HasColumnType("int");

                    b.Property<int>("Member_Id")
                        .HasColumnType("int");

                    b.HasKey("Parliament_Number", "SeatIndex", "Member_Id");

                    b.HasIndex("Member_Id");

                    b.ToTable("SeatingPlans");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Organisational.Tenure", b =>
                {
                    b.Property<int>("Member_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("Electorate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<int>("Party_Id")
                        .HasColumnType("int");

                    b.HasKey("Member_Id", "Start");

                    b.HasIndex("Party_Id");

                    b.ToTable("Tenures");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Votes.PartyVote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComplexPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Member_Id")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfVotes")
                        .HasColumnType("int");

                    b.Property<int?>("Party_Id")
                        .HasColumnType("int");

                    b.Property<bool?>("Position")
                        .HasColumnType("bit");

                    b.Property<int>("Question_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Member_Id");

                    b.HasIndex("Party_Id");

                    b.HasIndex("Question_Id");

                    b.ToTable("PartyVotes");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Votes.PersonalVote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComplexPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Member_Id")
                        .HasColumnType("int");

                    b.Property<bool?>("Position")
                        .HasColumnType("bit");

                    b.Property<bool>("Proxy")
                        .HasColumnType("bit");

                    b.Property<int>("Question_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Member_Id");

                    b.HasIndex("Question_Id");

                    b.ToTable("PersonalVotes");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Votes.VoiceVote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComplexPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Position")
                        .HasColumnType("bit");

                    b.Property<int>("Question_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Question_Id");

                    b.ToTable("VoiceVotes");
                });

            modelBuilder.Entity("BillMember", b =>
                {
                    b.HasOne("ParliamentVotes.Models.Legislation.Bill", null)
                        .WithMany()
                        .HasForeignKey("BillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParliamentVotes.Models.Organisational.Member", null)
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BillParliament", b =>
                {
                    b.HasOne("ParliamentVotes.Models.Legislation.Bill", null)
                        .WithMany()
                        .HasForeignKey("BillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParliamentVotes.Models.Organisational.Parliament", null)
                        .WithMany()
                        .HasForeignKey("ParliamentsNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MemberPartyVote", b =>
                {
                    b.HasOne("ParliamentVotes.Models.Votes.PartyVote", null)
                        .WithMany()
                        .HasForeignKey("SplitPartyVotesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParliamentVotes.Models.Organisational.Member", null)
                        .WithMany()
                        .HasForeignKey("SplitPartyVotesId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ParliamentVotes.Models.Legislation.SupplementaryOrderPaper", b =>
                {
                    b.HasOne("ParliamentVotes.Models.Legislation.Bill", "AmendingBill")
                        .WithMany()
                        .HasForeignKey("AmendingBill_Id");

                    b.HasOne("ParliamentVotes.Models.Organisational.Member", "Member")
                        .WithMany()
                        .HasForeignKey("Member_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParliamentVotes.Models.Organisational.Parliament", "Parliament")
                        .WithMany()
                        .HasForeignKey("Parliament_Number")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AmendingBill");

                    b.Navigation("Member");

                    b.Navigation("Parliament");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Motions.Question", b =>
                {
                    b.HasOne("ParliamentVotes.Models.Legislation.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("Bill_Id");

                    b.HasOne("ParliamentVotes.Models.Organisational.Member", "Member")
                        .WithMany()
                        .HasForeignKey("Member_Id");

                    b.HasOne("ParliamentVotes.Models.Organisational.Parliament", "Parliament")
                        .WithMany()
                        .HasForeignKey("Parliament_Number")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParliamentVotes.Models.Legislation.SupplementaryOrderPaper", "SupplementaryOrderPaper")
                        .WithMany()
                        .HasForeignKey("SupplementaryOrderPaper_Id");

                    b.Navigation("Bill");

                    b.Navigation("Member");

                    b.Navigation("Parliament");

                    b.Navigation("SupplementaryOrderPaper");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Organisational.GoverningParty", b =>
                {
                    b.HasOne("ParliamentVotes.Models.Organisational.Parliament", "Parliament")
                        .WithMany("GoverningParties")
                        .HasForeignKey("Parliament_Number")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParliamentVotes.Models.Organisational.Party", "Party")
                        .WithMany()
                        .HasForeignKey("Party_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parliament");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Organisational.Seating", b =>
                {
                    b.HasOne("ParliamentVotes.Models.Organisational.Member", "Member")
                        .WithMany()
                        .HasForeignKey("Member_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParliamentVotes.Models.Organisational.Parliament", "Parliament")
                        .WithMany("SeatingPlan")
                        .HasForeignKey("Parliament_Number")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Parliament");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Organisational.Tenure", b =>
                {
                    b.HasOne("ParliamentVotes.Models.Organisational.Member", "Member")
                        .WithMany("Tenures")
                        .HasForeignKey("Member_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParliamentVotes.Models.Organisational.Party", "Party")
                        .WithMany()
                        .HasForeignKey("Party_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Votes.PartyVote", b =>
                {
                    b.HasOne("ParliamentVotes.Models.Organisational.Member", "Member")
                        .WithMany()
                        .HasForeignKey("Member_Id");

                    b.HasOne("ParliamentVotes.Models.Organisational.Party", "Party")
                        .WithMany()
                        .HasForeignKey("Party_Id");

                    b.HasOne("ParliamentVotes.Models.Motions.Question", "Question")
                        .WithMany()
                        .HasForeignKey("Question_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Party");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Votes.PersonalVote", b =>
                {
                    b.HasOne("ParliamentVotes.Models.Organisational.Member", "Member")
                        .WithMany()
                        .HasForeignKey("Member_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParliamentVotes.Models.Motions.Question", "Question")
                        .WithMany()
                        .HasForeignKey("Question_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Votes.VoiceVote", b =>
                {
                    b.HasOne("ParliamentVotes.Models.Motions.Question", "Question")
                        .WithMany()
                        .HasForeignKey("Question_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Organisational.Member", b =>
                {
                    b.Navigation("Tenures");
                });

            modelBuilder.Entity("ParliamentVotes.Models.Organisational.Parliament", b =>
                {
                    b.Navigation("GoverningParties");

                    b.Navigation("SeatingPlan");
                });
#pragma warning restore 612, 618
        }
    }
}
